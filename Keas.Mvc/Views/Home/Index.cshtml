@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService AuthorizationService
@model Keas.Mvc.Models.HomeViewModel

@{
    ViewData["Title"] = "Home Page";
}
@if(Model.PendingItems){
      <div class="alert alert-warning">
        <div class="row justify-content-between align-middle">
          <p>You have pending items!</p>
          <a asp-controller="Confirm" asp-action="Confirm">Go to Accept page <i class="fas fa-arrow-right fa-xs"></i></a>

        </div>
      </div>
    }
<div class="card">
  <div class="card-header-primary">
    <div class="card-head t-center">
      <h2>Dashboard</h2>
    </div>
  </div>
  <div class="card-content">
      <div class="card">
          <div class="card-header-primary">
            <div class="card-head">
          <h2><i class="fas fa-id-card fa-xs"></i> Team Actions</h2>
        </div>
        </div>
        <div class="card-content">
                <ul>
                   @if ((await AuthorizationService.AuthorizeAsync(User, "AnyRole")).Succeeded)
                  {
                      <li>
                          <a href='@string.Format("/{0}/{1}", TempData["TeamName"] , "People")'>Team Assets</a>
                      </li>
                  }
                    <li>
                        <a asp-controller="Confirm" asp-action="MyStuff">MyStuff</a>
                    </li>
                     @if ((await AuthorizationService.AuthorizeAsync(User, "DepartmentAdminAccess")).Succeeded)
                  {
                      <li>
                        <a asp-controller="TeamAdmin">Administer Team</a>
                    </li>
                  }
                </ul>
        </div>
      </div>
  </div>
</div>
